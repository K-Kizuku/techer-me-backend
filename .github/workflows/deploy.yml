name: Run Build & Deploy

on:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  REGION: ${{ secrets.REGION }}
  IDENTITY_PROVIDER: ${{ secrets.IDENTITY_PROVIDER }}
  SERVICE_ACCOUNT: ${{ secrets.SERVICE_ACCOUNT }}
  GAR_LOCATION: ${{ secrets.GAR_LOCATION }}
  GAR_REPOSITORY: ${{ secrets.GAR_REPOSITORY }}
  GAR_IMAGE: ${{ secrets.GAR_IMAGE }}
  PROJECT_ID: ${{ secrets.PROJECT_ID }}
  CLOUD_RUN_SERVICE: ${{ secrets.CLOUD_RUN_SERVICE }}
  CLOUDSQL_INSTANCE_CONNECTION_NAME: "${{ secrets.PROJECT_ID }}:${{ secrets.REGION }}:${{ secrets.CLOUDSQL_INSTANCE }}"
  CLOUDSQL_SERVICE_ACCOUNT: ${{ secrets.CLOUDSQL_SERVICE_ACCOUNT }}
  MYSQL_USER: ${{ secrets.MYSQL_USER }}
  MYSQL_PASSWORD: ${{ secrets.MYSQL_PASSWORD }}
  MYSQL_DATABASE: ${{ secrets.MYSQL_DATABASE }}
  FIREBASE_SDK_KEY: ${{ secrets.FIREBASE_SDK_KEY }}
  GOOGLE_ACCESS_TOKEN: ${{ secrets.GOOGLE_ACCESS_TOKEN }}
  NAME: ${{ secrets.NAME }}
  BUCKET_NAME: ${{ secrets.BUCKET_NAME }}
jobs:
  deploy:
    runs-on: ubuntu-latest

    permissions:
      id-token: write
      contents: read
      pull-requests: write

    steps:
      - uses: actions/checkout@v4

      - uses: google-github-actions/auth@v2
        id: auth
        with:
          token_format: "access_token"
          workload_identity_provider: ${{ env.IDENTITY_PROVIDER }}
          service_account: ${{ env.SERVICE_ACCOUNT }}

      - name: "Set up Cloud SDK"
        uses: "google-github-actions/setup-gcloud@v2"
        with:
          version: ">= 363.0.0"

      - name: Docker Auth
        id: docker-auth
        uses: "docker/login-action@v1"
        with:
          username: "oauth2accesstoken"
          password: "${{ steps.auth.outputs.access_token }}"
          registry: ${{ env.GAR_LOCATION }}

      - name: Build
        run: |
          echo '${{ env.FIREBASE_SDK_KEY }}' > firebase-sdk.json
          docker build -f docker/production/Dockerfile -t ${{ env.GAR_LOCATION }}/${{ env.PROJECT_ID }}/${{ env.GAR_REPOSITORY }}/${{ env.GAR_IMAGE }}:${{ github.sha }} .

      - name: Push
        run: |
          docker push ${{ env.GAR_LOCATION }}/${{ env.PROJECT_ID }}/${{ env.GAR_REPOSITORY }}/${{ env.GAR_IMAGE }}:${{ github.sha }}

      - name: Deploy to CloudRun
        id: deploy
        run: |-
          gcloud run deploy ${{ env.CLOUD_RUN_SERVICE }} \
            --image ${{ env.GAR_LOCATION }}/${{ env.PROJECT_ID }}/${{ env.GAR_REPOSITORY }}/${{ env.GAR_IMAGE }}:${{ github.sha }} \
            --platform managed \
            --region ${{ env.REGION }} \
            --project ${{ env.PROJECT_ID }} \
            --service-account=${{ env.CLOUDSQL_SERVICE_ACCOUNT }} \
            --allow-unauthenticated \
            --min-instances=1 \
            --max-instances=5 \
            --add-cloudsql-instances ${{ env.CLOUDSQL_INSTANCE_CONNECTION_NAME }} \
            --set-env-vars DB_USER=${{ env.MYSQL_USER }} \
            --set-env-vars DB_PASSWORD=${{ env.MYSQL_PASSWORD }} \
            --set-env-vars DB_NAME=${{ env.MYSQL_DATABASE }} \
            --set-env-vars INSTANCE_CONNECTION_NAME=${{ env.CLOUDSQL_INSTANCE_CONNECTION_NAME }} \
            --set-env-vars MODE=prod
            --set-env-vars GOOGLE_ACCESS_TOKEN=${{ env.GOOGLE_ACCESS_TOKEN }} \
            --set-env-vars NAME=${{ env.NAME }} \
            --set-env-vars BUCKET_NAME=${{ env.BUCKET_NAME }} \
