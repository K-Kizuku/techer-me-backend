basePath: /
definitions:
  schema.CreateEventInput:
    properties:
      finished_at:
        type: string
      image_url:
        type: string
      message:
        type: string
      name:
        type: string
      owner_id:
        type: string
      started_at:
        type: string
    type: object
  schema.CreateEventOutput:
    properties:
      event_id:
        type: string
    type: object
  schema.CreateExchangeInput:
    properties:
      event_id:
        type: string
      user_id_1:
        type: string
      user_id_2:
        type: string
    type: object
  schema.Event:
    properties:
      event_id:
        type: string
      finished_at:
        type: string
      image_url:
        type: string
      message:
        type: string
      name:
        type: string
      owner_id:
        type: string
      started_at:
        type: string
    type: object
  schema.Exchange:
    properties:
      image_url:
        type: string
      message:
        type: string
      name:
        type: string
      skills:
        additionalProperties:
          type: string
        type: object
      times:
        type: integer
      urls:
        additionalProperties:
          type: string
        type: object
      user_id:
        type: string
    type: object
  schema.GenerateImageInput:
    properties:
      object_name:
        type: string
      type:
        type: string
    type: object
  schema.GenerateImageOutput:
    properties:
      url:
        type: string
    type: object
  schema.GetByIDInput:
    properties:
      user_id:
        type: string
    type: object
  schema.GetByIDOutput:
    properties:
      events:
        items:
          $ref: '#/definitions/schema.Event'
        type: array
      image_url:
        type: string
      is_organizer:
        type: boolean
      message:
        type: string
      name:
        type: string
      skills:
        additionalProperties:
          type: string
        type: object
      urls:
        additionalProperties:
          type: string
        type: object
      user_id:
        type: string
    type: object
  schema.GetEventByIDOutput:
    properties:
      events:
        items:
          $ref: '#/definitions/schema.Event'
        type: array
    type: object
  schema.GetEventDetailByIDOutput:
    properties:
      event_id:
        type: string
      finished_at:
        type: string
      image_url:
        type: string
      message:
        type: string
      name:
        type: string
      owner_id:
        type: string
      started_at:
        type: string
    type: object
  schema.GetExchangesOutput:
    properties:
      exchanges:
        items:
          $ref: '#/definitions/schema.Exchange'
        type: array
      stickers:
        items:
          $ref: '#/definitions/schema.Sticker'
        type: array
    type: object
  schema.GetMeOutput:
    properties:
      events:
        items:
          $ref: '#/definitions/schema.Event'
        type: array
      image_url:
        type: string
      is_organizer:
        type: boolean
      message:
        type: string
      name:
        type: string
      skills:
        additionalProperties:
          type: string
        type: object
      urls:
        additionalProperties:
          type: string
        type: object
      user_id:
        type: string
    type: object
  schema.Sticker:
    properties:
      image_url:
        type: string
      user_id:
        type: string
      x:
        type: number
      "y":
        type: number
    type: object
  schema.UpdateUserInput:
    properties:
      image_url:
        type: string
      is_organizer:
        type: boolean
      message:
        type: string
      name:
        type: string
      skills:
        additionalProperties:
          type: string
        type: object
      urls:
        additionalProperties:
          type: string
        type: object
    type: object
host: server-u7kyixk36q-an.a.run.app
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: This is a sample server Petstore server.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Swagger Example API
  version: "1.0"
paths:
  /event/join:
    post:
      consumes:
      - application/json
      description: Join an event by event ID
      parameters:
      - description: Event ID
        in: query
        name: event_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "201":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Join an event
      tags:
      - Event
  /events:
    post:
      consumes:
      - application/json
      description: イベント作成のためのエンドポイント
      parameters:
      - description: Event request body
        in: body
        name: event
        required: true
        schema:
          $ref: '#/definitions/schema.CreateEventInput'
      produces:
      - application/json
      responses:
        "201":
          description: OK
          schema:
            $ref: '#/definitions/schema.CreateEventOutput'
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: イベント作成
      tags:
      - Event
  /events/{event_id}:
    get:
      consumes:
      - application/json
      description: イベント詳細を取得する
      parameters:
      - description: Event ID
        in: path
        name: event_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schema.GetEventDetailByIDOutput'
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: イベント詳細の取得
      tags:
      - Event
  /exchanges:
    get:
      consumes:
      - application/json
      description: 名刺交換の一覧を取得するためのエンドポイント
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schema.GetExchangesOutput'
        "401":
          description: Unauthorized
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - Bearer: []
      summary: 交換した名刺一覧取得
      tags:
      - Exchange
    post:
      consumes:
      - application/json
      description: 名刺交換のためのエンドポイント
      parameters:
      - description: Exchange request body
        in: body
        name: exchange
        required: true
        schema:
          $ref: '#/definitions/schema.CreateExchangeInput'
      produces:
      - application/json
      responses:
        "201":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
        "401":
          description: Unauthorized
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - Bearer: []
      summary: 名刺交換
      tags:
      - Exchange
  /images/signed-url:
    post:
      consumes:
      - application/json
      description: Generate signed URL for uploading image
      parameters:
      - description: Generate image request body
        in: body
        name: generateImage
        required: true
        schema:
          $ref: '#/definitions/schema.GenerateImageInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schema.GenerateImageOutput'
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - Bearer: []
      summary: Generate signed URL
      tags:
      - Image
  /me:
    get:
      consumes:
      - application/json
      description: 自分の情報を取得する
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schema.GetMeOutput'
        "400":
          description: Bad Request
          schema:
            type: string
        "401":
          description: Unauthorized
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - Bearer: []
      summary: 自分の情報
      tags:
      - User
    put:
      consumes:
      - application/json
      description: ユーザー情報を更新する
      parameters:
      - description: 更新するユーザー情報(更新後の情報を全て含む必要があります)
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/schema.UpdateUserInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
        "401":
          description: Unauthorized
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - Bearer: []
      summary: ユーザー情報更新
      tags:
      - User
  /users:
    get:
      consumes:
      - application/json
      description: 指定したユーザーの情報を取得する
      parameters:
      - description: ユーザーID
        in: body
        name: id
        required: true
        schema:
          $ref: '#/definitions/schema.GetByIDInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schema.GetByIDOutput'
        "400":
          description: Bad Request
          schema:
            type: string
        "401":
          description: Unauthorized
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - Bearer: []
      summary: ユーザー情報取得
      tags:
      - User
  /users/events:
    get:
      consumes:
      - application/json
      description: 自分の開催したイベント情報を取得する
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schema.GetEventByIDOutput'
        "400":
          description: Bad Request
          schema:
            type: string
        "401":
          description: Unauthorized
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - Bearer: []
      summary: 自分のイベント情報取得
      tags:
      - User
securityDefinitions:
  Bearer:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
